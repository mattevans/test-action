name: Manual Telegram Direct
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
        type: string
      custom_message:
        description: 'Additional custom message (optional)'
        required: false
        type: string
      topic_id:
        description: 'Topic ID for the message (e.g. 1 for General, 2 for Releases)'
        required: false
        type: string
        default: ''

permissions:
  contents: read
  
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get release info
        id: release_info
        run: |
          RELEASE_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.inputs.release_tag }}")
          
          echo "RELEASE_NAME=$(echo $RELEASE_DATA | jq -r '.name')" >> $GITHUB_OUTPUT
          echo "RELEASE_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$(echo $RELEASE_DATA | jq -r '.body')" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Determine topic ID
        id: topic
        run: |
          TOPIC_ID="${{ github.event.inputs.topic_id }}"
          if [ -z "$TOPIC_ID" ]; then
            TOPIC_ID="${{ secrets.TELEGRAM_TOPIC_ID }}"
          fi
          echo "id=$TOPIC_ID" >> $GITHUB_OUTPUT
          echo "Using topic ID: $TOPIC_ID"

      - name: Send notification using Telegram API directly
        run: |
          MESSAGE="üöÄ *New Release*: *${{ github.repository }}* ${{ github.event.inputs.release_tag }}

          üìù *Release Title*: ${{ steps.release_info.outputs.RELEASE_NAME }}
          
          ${{ steps.release_info.outputs.RELEASE_BODY }}
          
          ${{ github.event.inputs.custom_message }}
          
          [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.event.inputs.release_tag }})"
          
          # Debug info
          echo "Sending to chat ID: ${{ secrets.TELEGRAM_TO }}"
          echo "Using topic ID: ${{ steps.topic.outputs.id }}"
          
          # Send message
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_TO }}" \
            -d "message_thread_id=${{ steps.topic.outputs.id }}" \
            -d "text=$MESSAGE" \
            -d "parse_mode=Markdown" \
            -d "disable_web_page_preview=true" | jq 